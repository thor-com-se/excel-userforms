' resources/library/form/setup.txt =================================================================

Sub OpenForm(Optional zoomLevel as Long = 1.4)
    Dim ThisForm As Object
    Dim X As Long
    Dim Line As Long

    'This is to stop screen flashing while creating form
    Application.VBE.MainWindow.Visible = False

    'Add UserForm
    Set ThisForm = ThisWorkbook.VBProject.VBComponents.Add(3)
    With ThisForm
        .Properties("Caption") = "Files to folders
        .Properties("ForeColor") = RGB(0, 0, 0)
        .Properties("BackColor") = RGB(255, 255, 255)
    End With

    'Set font size
    Dim FontSize As Long
    FontSize = 8 * zoomLevel

    'Set dimensions of form contents
    Dim FormWidth As Long
    FormWidth = FontSize * 50
    Dim FormHeight As Long
    FormHeight = 0

    'Set width of form
    ThisForm.Properties("Width") = FormWidth

' resources/library/form/sizes.txt =================================================================

    'Set font height
    Dim FontHeight As Long
    FontHeight = FontSize * 1.3

    'Set title size
    Dim TitleSize As Long
    TitleSize = FontSize * 1.7

    'Set title height
    Dim TitleHeight As Long
    TitleHeight = FontHeight * 1.7

    'Set margin
    Dim Margin As Long
    Margin = FontSize * 1.25

    'Set content width
    Dim ContentWidth As Long
    ContentWidth = FormWidth - Margin * 2.5

    'Set header height
    Dim HeaderHeight As Long
    HeaderHeight = FontSize * 7

    'Set input height
    Dim InputHeight As Long
    InputHeight = FontSize * 2

    'Set width of options
    Dim OptionWidth As Long
    OptionWidth = (FormWidth - Margin * 1.5 - Margin * 4) / 6

    'Set divider height
    Dim DividerHeight As Long
    DividerHeight = FontSize * 0.15

    'Set list height
    Dim ListHeight As Long
    ListHeight = FontSize * 16
    
    'Set button width
    Dim ButtonWidth As Long
    ButtonWidth = FontSize * 10

' resources/library/methods/browse.txt =============================================================

    InjectCode ThisForm, "Function BrowseFileOrFolder(browseFor As String) As String"
    InjectCode ThisForm, "    Dim fd As FileDialog"
    InjectCode ThisForm, "    Dim chosenPath As String"
    InjectCode ThisForm, ""
    InjectCode ThisForm, "    ' Check the parameter to decide if we are browsing for a file or folder"
    InjectCode ThisForm, "    If LCase(browseFor) = ""file"" Then"
    InjectCode ThisForm, "        Set fd = Application.FileDialog(msoFileDialogFilePicker)"
    InjectCode ThisForm, "    ElseIf LCase(browseFor) = ""folder"" Then"
    InjectCode ThisForm, "        Set fd = Application.FileDialog(msoFileDialogFolderPicker)"
    InjectCode ThisForm, "    Else"
    InjectCode ThisForm, "        BrowseFileOrFolder = ""Invalid parameter. Use 'file' or 'folder'."""
    InjectCode ThisForm, "        Exit Function"
    InjectCode ThisForm, "    End If"
    InjectCode ThisForm, ""
    InjectCode ThisForm, "    ' Show the dialog"
    InjectCode ThisForm, "    With fd"
    InjectCode ThisForm, "        .AllowMultiSelect = False ' Allow only one selection"
    InjectCode ThisForm, "        If .Show = -1 Then ' If the user makes a selection"
    InjectCode ThisForm, "            chosenPath = .SelectedItems(1)"
    InjectCode ThisForm, "        Else ' If the user cancels"
    InjectCode ThisForm, "            chosenPath = """""
    InjectCode ThisForm, "        End If"
    InjectCode ThisForm, "    End With"
    InjectCode ThisForm, ""
    InjectCode ThisForm, "    ' Return the chosen file or folder path"
    InjectCode ThisForm, "    BrowseFileOrFolder = chosenPath"
    InjectCode ThisForm, "End Function"

' resources/userforms/files-to-folders/inputs/header/event-handlers.txt ============================

    InjectCode ThisForm, "Private Sub ComboBoxZoom_Change()"
    InjectCode ThisForm, "   Dim newZoomLevel As Long"
    InjectCode ThisForm, "   newZoomLevel = CSng(Replace(Me.ComboBoxZoom.Value, ""%"", """") / 100)"
    InjectCode ThisForm, "   Me.Hide"
    InjectCode ThisForm, "   Unload Me"
    InjectCode ThisForm, "   OpenForm newZoomLevel"
    InjectCode ThisForm, "End Sub"

' resources/userforms/files-to-folders/inputs/header/header.txt ====================================

    AddBackgroundFill ThisForm.designer, color:=RGB(33, 115, 70), top:=0, left:=0, width:=FormWidth, height:=HeaderHeight
    AddLabel ThisForm.designer, caption:="Copy files to folders", top:=HeaderHeight - TitleHeight - Margin, left:=Margin, width:=ContentWidth, height:=TitleHeight, bold:=True, font:=TitleSize, color:=RGB(255, 255, 255)
    AddComboBox ThisForm.designer, name:="ComboBoxZoom", top:=HeaderHeight - InputHeight - Margin, left:=Margin + ContentWidth - OptionWidth, width:=OptionWidth, height:=InputHeight, font:=FontSize
    FormHeight = FormHeight + HeaderHeight

' resources/userforms/files-to-folders/inputs/import/event-handlers.txt ============================

    InjectCode ThisForm, "Private Sub BrowseSourceFolder_Click()"
    InjectCode ThisForm, "End Sub"

' resources/userforms/files-to-folders/inputs/import/import.txt ====================================

    FormHeight = FormHeight + Margin * 1.5
    AddLabel ThisForm.designer, caption:="Source folder:", top:=FormHeight, left:=Margin, width:=OptionWidth * 2, height:=FontHeight, font:=FontSize
    AddLabel ThisForm.designer, caption:="Type:", top:=FormHeight, left:=Margin + (OptionWidth * 2 + Margin), width:=OptionWidth, height:=FontHeight, font:=FontSize
    AddLabel ThisForm.designer, caption:="Target folder:", top:=FormHeight, left:=Margin + (OptionWidth * 2 + Margin) + (OptionWidth + Margin), width:=OptionWidth * 2, height:=FontHeight, font:=FontSize
    AddLabel ThisForm.designer, caption:="Method:", top:=FormHeight, left:=Margin + (OptionWidth * 2 + Margin) * 2 + (OptionWidth + Margin), width:=OptionWidth, height:=FontHeight, font:=FontSize
    FormHeight = FormHeight + FontHeight + Margin / 4
    AddBrowse ThisForm.designer, name:="BrowseSourceFolder", top:=FormHeight, left:=Margin, width:=OptionWidth * 2, height:=InputHeight, font:=FontSize
    AddComboBox ThisForm.designer, name:="ComboBoxFile", top:=FormHeight, left:=Margin + (OptionWidth * 2 + Margin), width:=OptionWidth, height:=InputHeight, font:=FontSize, enabled:=False
    AddBrowse ThisForm.designer, name:="BrowseTargetFolder", top:=FormHeight, left:=Margin + (OptionWidth * 2 + Margin) + (OptionWidth + Margin), width:=OptionWidth * 2, height:=InputHeight, font:=FontSize, enabled:=False
    AddComboBox ThisForm.designer, name:="ComboBoxMethod", top:=FormHeight, left:=Margin + (OptionWidth * 2 + Margin) * 2 + (OptionWidth + Margin), width:=OptionWidth, height:=InputHeight, font:=FontSize, enabled:=False
    FormHeight = FormHeight + InputHeight + Margin * 1.5

' resources/userforms/files-to-folders/inputs/divider1.txt =========================================

    AddHorizontalLine ThisForm.designer, top:=FormHeight, left:=0, width:=FormWidth, height:=DividerHeight
    FormHeight = FormHeight + DividerHeight

' resources/userforms/files-to-folders/inputs/mapping.txt ==========================================

    FormHeight = FormHeight + Margin * 1.5
    AddOptionBox ThisForm.designer, name:="OptionButtonCreate", top:=FormHeight, left:=Margin + (ContentWidth - Margin) / 2 + Margin, width:=(ContentWidth - Margin) / 2, height:=InputHeight + Margin, font:=FontSize, enabled:=False
    AddLabel ThisForm.designer, caption:="Create folder with file name", top:=FormHeight + (InputHeight - FontHeight) / 2 + Margin / 2, left:=Margin + (ContentWidth - Margin) / 2 + Margin * 3, width:=(ContentWidth - Margin) / 2 - Margin * 2 - Margin / 2, height:=FontHeight, font:=FontSize
    AddOptionBox ThisForm.designer, name:="OptionButtonMatch", top:=FormHeight + (InputHeight + Margin) + Margin / 2, left:=Margin + (ContentWidth - Margin) / 2 + Margin, width:=(ContentWidth - Margin) / 2, height:=InputHeight + Margin, font:=FontSize, enabled:=False
    AddComboBox ThisForm.designer, name:="ComboBoxMatch", top:=FormHeight + (InputHeight + Margin) + Margin / 2 + Margin / 2, left:=Margin + (ContentWidth - Margin) / 2 + Margin * 3, width:=(ContentWidth - Margin) / 2 - Margin * 2 - Margin / 2, height:=InputHeight, font:=FontSize, enabled:=False
    AddOptionBox ThisForm.designer, name:="OptionButtonInput", top:=FormHeight + (InputHeight + Margin) * 2 + Margin, left:=Margin + (ContentWidth - Margin) / 2 + Margin, width:=(ContentWidth - Margin) / 2, height:=InputHeight + Margin, font:=FontSize, enabled:=False
    AddTextBox ThisForm.designer, name:="TextBoxInput", placeholder:="Input a new folder name", top:=FormHeight + (InputHeight + Margin) * 2 + Margin + Margin / 2, left:=Margin + (ContentWidth - Margin) / 2 + Margin * 3, width:=(ContentWidth - Margin) / 2 - Margin * 2 - Margin / 2, height:=InputHeight, font:=FontSize, enabled:=False
    AddListBox ThisForm.designer, name:="ListBoxMapping", top:=FormHeight, left:=Margin, width:=(ContentWidth - Margin) / 2, height:=ListHeight, font:=FontSize
    FormHeight = FormHeight + ListHeight + Margin

' resources/userforms/files-to-folders/inputs/divider2.txt =========================================

    AddHorizontalLine ThisForm.designer, top:=FormHeight, left:=0, width:=FormWidth, height:=DividerHeight
    FormHeight = FormHeight + DividerHeight

' resources/userforms/files-to-folders/inputs/buttons/buttons.txt ==================================

    AddBackgroundFill ThisForm.designer, color:=RGB(245, 245, 245), top:=FormHeight, left:=0, width:=FormWidth, height:=FormHeight + Margin + InputHeight + Margin
    FormHeight = FormHeight + Margin
    AddButton ThisForm.designer, name:="ButtonCopyFiles", caption:="Copy files", top:=FormHeight, left:=Margin, width:=ButtonWidth, height:=InputHeight, font:=FontSize, enabled:=False
    AddButton ThisForm.designer, name:="ButtonCloseForm", caption:="Close form", top:=FormHeight, left:=Margin + (ButtonWidth + Margin), width:=ButtonWidth, height:=InputHeight, font:=FontSize
    AddButton ThisForm.designer, name:="ButtonExitDocument", caption:="Exit document", top:=FormHeight, left:=FormWidth - Margin * 1.5 - ButtonWidth, width:=ButtonWidth, height:=InputHeight, font:=FontSize
    FormHeight = FormHeight + Margin + InputHeight + Margin + Margin

' resources/userforms/files-to-folders/inputs/buttons/event-handlers.txt ===========================

    InjectCode ThisForm, "Private Sub ButtonCloseForm_Click()"
    InjectCode ThisForm, "    Unload Me"
    InjectCode ThisForm, "    Application.WindowState = xlMaximized"
    InjectCode ThisForm, "End Sub"

    InjectCode ThisForm, "Private Sub ButtonCopyFiles_Click()"
    InjectCode ThisForm, "    Dim i As Long"
    InjectCode ThisForm, "    Dim url As String"
    InjectCode ThisForm, "    Dim validURL As Boolean"
    InjectCode ThisForm, ""
    InjectCode ThisForm, "    ' Loop through each item in the ListLinks list box"
    InjectCode ThisForm, "    For i = 0 To Me.ListLinks.ListCount - 1"
    InjectCode ThisForm, "        ' Get the URL from the list box"
    InjectCode ThisForm, "        url = Me.ListLinks.List(i)"
    InjectCode ThisForm, ""
    InjectCode ThisForm, "        ' Check if the URL is valid"
    InjectCode ThisForm, "        validURL = (Left(url, 7) = ""http://"" Or Left(url, 8) = ""https://"")"
    InjectCode ThisForm, ""
    InjectCode ThisForm, "        ' If the URL is valid, open it in the default browser"
    InjectCode ThisForm, "        If validURL Then"
    InjectCode ThisForm, "            ThisWorkbook.FollowHyperlink Address:=url"
    InjectCode ThisForm, "        End If"
    InjectCode ThisForm, "    Next i"
    InjectCode ThisForm, "End Sub"

    InjectCode ThisForm, "Private Sub ButtonExitDocument_Click()"
    InjectCode ThisForm, "    Unload Me"
    InjectCode ThisForm, "    ActiveWorkbook.Close SaveChanges:=False"
    InjectCode ThisForm, "    Application.Quit"
    InjectCode ThisForm, "End Sub"

' resources/userforms/files-to-folders/initialize.txt ==============================================

    InjectCode ThisForm, "Private setZoomLevel As Long"

    InjectCode ThisForm, "Private Sub UserForm_Initialize()"
    InjectCode ThisForm, "   Dim fileTypes As Variant"
    InjectCode ThisForm, "   Dim fileType As Variant"
    InjectCode ThisForm, "   fileTypes = Array("".xlsx"", "".docx"", "".pptx"", "".pdf"")"
    InjectCode ThisForm, "   For Each fileType In fileTypes"
    InjectCode ThisForm, "       Me.ComboBoxFile.AddItem fileType"
    InjectCode ThisForm, "       Me.ComboBoxFile.Value = fileType"
    InjectCode ThisForm, "   Next fileType"
    InjectCode ThisForm, "   Me.ComboBoxFile.Enabled = True"
    InjectCode ThisForm, ""
    InjectCode ThisForm, "   Dim method As Variant"
    InjectCode ThisForm, "   Dim methods As Variant"
    InjectCode ThisForm, "   methods = Array(""Input"", ""Create"", ""Match"")"
    InjectCode ThisForm, "   For Each method In methods"
    InjectCode ThisForm, "       Me.ComboBoxMethod.AddItem method"
    InjectCode ThisForm, "       Me.ComboBoxMethod.Value = method"
    InjectCode ThisForm, "   Next method"
    InjectCode ThisForm, "   Me.ComboBoxMethod.Enabled = True"
    InjectCode ThisForm, ""
    InjectCode ThisForm, "   Dim mappings As Variant"
    InjectCode ThisForm, "   Dim mapping As Variant"
    InjectCode ThisForm, "   mappings = Array(""test.xlsx "" & ChrW(8594) & "" /test (new folder)"", ""another.xlsx "" & ChrW(8594) & "" /another"", ""testhere.xlsx "" & ChrW(8594), ""test.xlsx "" & ChrW(8594) & "" /test"")"
    InjectCode ThisForm, "   For Each mapping In mappings"
    InjectCode ThisForm, "       Me.ListBoxMapping.AddItem mapping"
    InjectCode ThisForm, "   Next mapping"
    InjectCode ThisForm, ""
    InjectCode ThisForm, "   Dim levels As Variant"
    InjectCode ThisForm, "   levels = Array(""50%"", ""75%"", ""100%"", ""125%"", ""150%"", ""175%"", ""200%"", ""225%"", ""250%"")"
    InjectCode ThisForm, "   Me.ComboBoxZoom.List = levels"
    InjectCode ThisForm, "   setZoomLevel = " & zoomLevel
    InjectCode ThisForm, "End Sub"

' resources/library/form/close.txt =================================================================

    InjectCode ThisForm, "Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)"
    InjectCode ThisForm, "    If CloseMode = vbFormControlMenu Then"
    InjectCode ThisForm, "        Cancel = True"
    InjectCode ThisForm, "        MsgBox ""Action not completed."" & vbNewLine & ""Please use the buttons on this form."""
    InjectCode ThisForm, "    End If"
    InjectCode ThisForm, "End Sub"

' resources/library/form/show.txt ==================================================================

    'Set width of form
    ThisForm.Properties("Height") = FormHeight

    'Show the form
    VBA.UserForms.Add(ThisForm.name).Show

    'Delete the form
    ThisWorkbook.VBProject.VBComponents.Remove ThisForm
End Sub

' resources/library/components/background-fill.txt =================================================

Sub AddBackgroundFill(obj As Object, color As Long, top As Long, left As Long, width As Long, height As Long)
    Dim NewBackgroundFill As MSForms.Label
    Set NewBackgroundFill = obj.Controls.Add("Forms.Label.1")
    With NewBackgroundFill
        .backColor = color
        .top = top
        .left = left
        .width = width
        .height = height
    End With
End Sub

' resources/library/components/browse.txt ==========================================================

Sub AddBrowse(obj As Object, name As String, top As Long, left As Long, width As Long, height As Long, font As Long, Optional enabled As Boolean = True)
    Dim ButtonWidth As Long
    ButtonWidth = 6 * font

    Dim LabelWidth As Long
    LabelWidth = width - ButtonWidth
    
    Dim NewBox As MSForms.Label
    Set NewBox = obj.Controls.Add("Forms.Label.1")
    With NewBox
        .top = top
        .left = left
        .width = width
        .height = height
        .Font.Size = font
        .Font.name = "Tahoma"
        .BackStyle = fmBackStyleTransparent
        .BorderStyle = fmBorderStyleSingle
        .BorderColor = RGB(225, 225, 225)
    End With
    
    Dim NewLabel As MSForms.Label
    Set NewLabel = obj.Controls.Add("Forms.Label.1")
    With NewLabel
        .caption = "/path/to/folder"
        .top = top + font / 3
        .left = left + font / 4 * 3
        .width = width
        .height = height
        .Font.Size = font
        .Font.name = "Tahoma"
        .BackStyle = fmBackStyleTransparent
        .ForeColor = RGB(225, 225, 225)
    End With
    
    Dim NewButton As MSForms.CommandButton
    Set NewButton = obj.Controls.Add("Forms.CommandButton.1")
    With NewButton
        .name = name
        .caption = "Browse"
        .Accelerator = "M"
        .top = top
        .left = left + LabelWidth
        .width = ButtonWidth
        .height = height
        .Font.Size = font
        .Font.name = "Tahoma"
        .backColor = RGB(255, 255, 255)
        .ForeColor = RGB(0, 0, 0)
        .enabled = enabled
    End With
End Sub

' resources/library/components/button.txt ==========================================================

Sub AddButton(obj As Object, name As String, caption As String, top As Long, left As Long, width As Long, height As Long, font As Long, Optional enabled As Boolean = True)
    Dim NewButton As MSForms.CommandButton
    Set NewButton = obj.Controls.Add("Forms.CommandButton.1")
    With NewButton
        .name = name
        .caption = caption
        .Accelerator = "M"
        .top = top
        .left = left
        .width = width
        .height = height
        .Font.Size = font
        .Font.name = "Tahoma"
        .backColor = RGB(255, 255, 255)
        .ForeColor = RGB(0, 0, 0)
        .enabled = enabled
    End With
End Sub

' resources/library/components/combo-box.txt =======================================================

Sub AddComboBox(obj As Object, name As String, top As Long, left As Long, width As Long, height As Long, font As Long, Optional enabled As Boolean = True, Optional listItems As Variant = Empty)
    Dim NewComboBox As MSForms.ComboBox
    Set NewComboBox = obj.Controls.Add("Forms.ComboBox.1")
    With NewComboBox
        .name = name
        .top = top
        .left = left
        .width = width
        .height = height
        .Font.Size = font
        .Font.name = "Tahoma"
        .BackStyle = fmBackStyleOpaque
        .enabled = enabled
        
        If Not IsEmpty(listItems) Then
            .List = listItems
        End If
    End With
End Sub

' resources/library/components/horizontal-line.txt =================================================

Sub AddHorizontalLine(obj As Object, top As Long, left As Long, width As Long, height As Long)
    Dim NewHorizontalLine As MSForms.Label
    Set NewHorizontalLine = obj.Controls.Add("Forms.Label.1")
    With NewHorizontalLine
        .backColor = RGB(215, 215, 215)
        .top = top
        .left = left
        .width = width
        .height = height
    End With
End Sub

' resources/library/components/inject-code.txt =====================================================

Sub InjectCode(form As Object, code As String, Optional deepInject As Boolean = False)
    With form.CodeModule
        If Not deepInject Then
            .InsertLines .CountOfLines + 1, code
        Else
            Dim lines() As String
            Dim line As String
            Dim i As Integer
            
            ' Split the code into individual lines
            lines = Split(code, vbCrLf)
            
            ' Insert the opening With statement
            .InsertLines .CountOfLines + 1, "With ThisWorkbook.VBProject.VBComponents(""" & form.Properties("Name") & """).CodeModule"
            
            ' Insert each line of code
            For i = LBound(lines) To UBound(lines)
                line = lines(i)
                .InsertLines .CountOfLines + 1, ".InsertLines .CountOfLines + 1, " & Replace(line, "", """") & ""
            Next i
            
            ' Insert the closing End With statement
            .InsertLines .CountOfLines + 1, "End With"
        End If
    End With
End Sub

' resources/library/components/label.txt ===========================================================

Sub AddLabel(obj As Object, caption As String, top As Long, left As Long, width As Long, height As Long, font As Long, Optional bold As Boolean = False, Optional color As Long = -1)
    If color = -1 Then
        color = RGB(0, 0, 0)
    End If

    Dim NewLabel As MSForms.Label
    Set NewLabel = obj.Controls.Add("Forms.Label.1")
    With NewLabel
        .caption = caption
        .top = top
        .left = left
        .width = width
        .height = height
        .Font.Size = font
        .Font.name = "Tahoma"
        If bold Then
            .Font.bold = True
        End If
        .ForeColor = color
        .BackStyle = fmBackStyleTransparent
    End With
End Sub

' resources/library/components/list-box.txt ========================================================

Sub AddListBox(obj As Object, name As String, top As Long, left As Long, width As Long, height As Long, font As Long, Optional enabled As Boolean = True, Optional listItems As Variant = Empty, Optional value As Variant = Empty)
    Dim NewListBox As MSForms.ListBox
    Set NewListBox = obj.Controls.Add("Forms.ListBox.1")
    With NewListBox
        .name = name
        .top = top
        .left = left
        .width = width
        .height = height
        .Font.Size = font * 1.2
        .Font.name = "Tahoma""
        .enabled = enabled

        If Not IsEmpty(listItems) Then
            .List = listItems
        End If

        If Not IsEmpty(value) Then
            .Value = value
        End If
    End With
End Sub

' resources/library/components/option-box.txt ======================================================

Sub AddOptionBox(obj As Object, name As String, top As Long, left As Long, width As Long, height As Long, font As Long, Optional enabled As Boolean = True)
    Dim NewBox As MSForms.Label
    Set NewBox = obj.Controls.Add("Forms.Label.1")
    With NewBox
        .top = top
        .left = left
        .width = width
        .height = height
        .Font.Size = font
        .Font.name = "Tahoma"
        .BackStyle = fmBackStyleTransparent
        .BorderStyle = fmBorderStyleSingle
        .BorderColor = RGB(225, 225, 225)
    End With
    
    Dim NewOptionButton As MSForms.OptionButton
    Set NewOptionButton = obj.Controls.Add("Forms.OptionButton.1")
    With NewOptionButton
        .name = name
        .top = top + font / 3
        .left = left + font / 4 * 3
        .BackStyle = fmBackStyleTransparent
        .enabled = enabled
    End With
End Sub

' resources/library/components/option-button.txt ===================================================

Sub AddOptionButton(obj As Object, name As String, top As Long, left As Long, width As Long, height As Long, font As Long, Optional enabled As Boolean = True)
    Dim NewOptionButton As MSForms.OptionButton
    Set NewOptionButton = obj.Controls.Add("Forms.OptionButton.1")
    With NewOptionButton
        .name = name
        .top = top
        .left = left
        .width = width
        .height = height
        .Font.Size = font
        .Font.name = "Tahoma"
        .BackStyle = fmBackStyleOpaque
        .enabled = enabled
    End With
End Sub

' resources/library/components/text-box.txt ========================================================

Sub AddTextBox(obj As Object, name As String, placeholder As String, top As Long, left As Long, width As Long, height As Long, font As Long, Optional enabled As Boolean = True)
    Dim NewTextBox As MSForms.TextBox
    Set NewTextBox = obj.Controls.Add("Forms.TextBox.1")
    With NewTextBox
        .name = name
        .text = placeholder
        .top = top
        .left = left
        .width = width
        .height = height
        .Font.Size = font
        .Font.name = "Tahoma"
        .backColor = RGB(255, 255, 255)
        .ForeColor = RGB(0, 0, 0)
        .enabled = enabled
    End With
End Sub

